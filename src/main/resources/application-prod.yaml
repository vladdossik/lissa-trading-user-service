server:
  port: ${SERVER_PORT}

spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST}
    port: ${SPRING_RABBITMQ_PORT}
    username: ${SPRING_RABBITMQ_USERNAME}
    password: ${SPRING_RABBITMQ_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        default_schema: ${SPRING_DATA_DEFAULT_SCHEMA}
        format_sql: true

  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.yaml
    default-schema: ${SPRING_DATA_DEFAULT_SCHEMA}

security:
  internal:
    token: ${SECURITY_INTERNAL_TOKEN}

logging:
  level:
    lissa.trading.user.service.aspect: INFO

integration:
  rest:
    auth-service-url: ${AUTH_SERVICE_URL}
    services:
      tinkoff-api:
        url: ${TINKOFF_API_SERVICE_URL}
        token: ${TINKOFF_API_SERVICE_TOKEN}
      moex-api:
        url: ${MOEX_API_SERVICE_URL}
        token: ${MOEX_API_SERVICE_TOKEN}
  rabbit:
    inbound:
      tg-bot:
        favourite-stocks:
          queue: tg-bot-favorite-stocks
          routing-key: tgBot.favourite-stocks
        user-update:
          queue: tg-bot-user-update
          routing-key: tgBot.user-update
    outbound:
      user-service:
        favourite-stocks:
          queue: user-service-favourite-stocks
          routing-key: userService.favourite-stocks
        user-update:
          queue: user-service-user-update
          routing-key: userService.user-update
      statistics-service:
        user:
          queue: user-stats-queue
      user-notifications:
        exchange: user-notifications-exchange